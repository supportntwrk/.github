name: Validate ECR Address from docker file
on:
  pull_request:
    branches: ["*"]
      
  repository_dispatch:
    types: [org-workflow-bot]  
# env:
#   ECR_PREFIX: "498031324058.dkr.ecr.us-east-1.amazonaws.com"

jobs:
  register:
    runs-on: ubuntu-latest
    steps:
    - uses: SvanBoxel/organization-workflow@main
      with:
        id: ${{ github.event.client_payload.id }}
        callback_url: ${{ github.event.client_payload.callback_url }}
        sha: ${{ github.event.client_payload.sha }}
        run_id: ${{ github.run_id }}
        name: ${{ github.workflow }}
        enforce: true
        documentation: "ony-org.sh"

  main:
    needs: [register]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Self
      uses: actions/checkout@v2.3.4
    - shell: bash
      run: |
        cp ony-org.sh ecr-checker.sh ; pwd
    - name: Upload checker file
      uses: actions/upload-artifact@v3
      with:
        name: checker-file
        path: ecr-checker.sh
       # echo "{supportntwrk/.github/ony-org.sh" >> $GITHUB_ENV
    - name: Checkout Member
      uses: actions/checkout@v2.3.4
      with:
        repository: ${{ github.event.client_payload.repository.full_name }}
        ref: ${{ github.event.client_payload.sha }}
        token: ${{ github.event.client_payload.token }}
    - name: Download a checker file
      uses: actions/download-artifact@v3
      with:
        name: checker-file
    - name: list files 
      run: ls -laR
    # - name: Validate dockerfile base address
    #   run: bash -x $GITHUB_ENV
      
      
      # |
      #  for path in $(find . -iname "*dockerfile*" -exec ls -l {} \;  |  awk '{print $NF}'); do
      #    [[ $(grep -i FROM ${path} | awk '{print $2}' | awk -F"/" '{print $1}') == $ECR_PREFIX ]] || exit 1
      #    done

#   if [[ ${ecr} != ${ECR_PREFIX} ]] ; then
#     echo "WARN: ${path} dockerfile doesn't contain organization specific ECR address"
#     echo ${path} >> ./${DOCKERFILE_LIST}
#   else
#     echo "INFO: You can merge your PR against your base branch"
#   fi
# done

# if [[ -s ${DOCKERFILE_LIST} ]]; then
#   echo "ERROR: Following docker file(s) doesn't contain organization certified ECR address."
#   cat ${DOCKERFILE_LIST}
#   exit 1
# fi
      
  
